// этот метод для настройки, он выполняется 1 раз при (пере-)запуске контроллера
void setup() {
   // настраиваем соединение с компьютером - будем писать туда результаты
   Serial.begin(115200);
   
   // пин 2 соединен с ECHO датчика, он будет слушать длительность импульса
   // поэтому настраиваем его на "вход"
   pinMode (2,INPUT); 
   
   // пин 3 соединен с TRIG датчика, он подает сигнал к запуску измерения
   // поэтому его настраиваем на "вЫход"
   pinMode (3,OUTPUT);
   
   // пин 4 соединен с питанием (VCC) датчика
   // поэтому настроим его на "вЫход"...
   pinMode (4,OUTPUT);
   // и подадим туда высокий уровень (5 вольт)
   digitalWrite(4,HIGH);
}

// этот метод будет выполняться постоянно, в нем основная деятельность нашей программы
// как только он заканчивается - волшебным образом начнется снова
void loop() {

  // подадим сигнал высокого уровня (логическая 1, 5 вольт) на ногу TRIG - для запуска измерения
  digitalWrite(3,HIGH);
  delay(1);  // задержимся на 1 миллисекунду, чтобы датчик успел увидеть этот сигнал
  // и сбросим сигнал на ноге TRIG обратно в низкий уровень (логический 0, ноль вольт)
  digitalWrite(3,LOW);
  
  // теперь датчик немножко потупит, а потом выставит на ноге ECHO высокий уровень
  // и будет его держать в течение времени, пропорционалного измеренному расстоянию
  // это-то время нам и надо "засечь"
  
  // в цикле ждем пока на ноге ECHO нет сигнала высокого уровня - датчик еще не начал измерять
  while (digitalRead(2)==LOW){
    // тут ничего не делаем, просто ждем :)
  }
  // когда мы прошли этот цикл, на ECHO появился высокий уровень (5 вольт) от датчика
  
  int i=0; // эта переменная будет считать итерации цикла - т.е. время импульса на ECHO
  
  // итак, в цикле ждем пока высокий уровень на ECHO сохраняется
  while(digitalRead(2)==HIGH){
     i=i+1; // и все это время увеличиваем нашу переменную
  }
  // когда цикл закончился, сигнал на ECHO опять стал низким, измерение закончилось
  
  // выдадим на компьютер результат измерения (число, пропорциональное расстоянию)
  Serial.println(i);
  delay(500);
}
